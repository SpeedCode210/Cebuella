@page "/Student/{StudentUsername}"
@using Cebuella.Models
@model Cebuella.Pages.Student.Student

@{
    ViewData["Title"] = "Student Profile";
}

<h1>@Model.StudentUsername's Profile</h1>

<div class="container mt-5">
    <div class="text-center">
        <h2 class="display-4">Daily Report</h2>
        <h3 class="display-6">@DateTime.Today.ToString("dd MMMM yyyy")</h3>
    </div>

    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="mt-4">
                <div class="form-group">
                    <label for="dailyReport">Daily Report</label>
                    <div id="editorContainer"
                         style="height: 300px; border: 2px solid #007bff; border-radius: 5px;"></div>
                    <textarea id="dailyReport" name="DailyReport" style="display: none;">@Model.DailyReport</textarea>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="container mt-5">
    <div class="text-center">
        <h2 class="display-4">Student Tasks</h2>
    </div>

    <form method="post" class="mb-4">
        <div class="input-group">
            <input type="text"  class="form-control" placeholder="Enter a new task" asp-for="TaskContent" required />
            <input type="hidden" value="0" asp-for="Action"/>
            <button type="submit" class="btn btn-primary">Add Task</button>
        </div>
    </form>


    <div class="list-group mt-4">
        @foreach (StudentTask t in Model.Tasks)
        {
            <div class="list-group-item mb-3 shadow-sm @(t.Content.ToLower().Contains("important") ? "bg-warning" : "")">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <span class="h5">üìù @t.Content</span>
                        <br />
                        <small class="text-muted">üë®‚Äçüè´ Given by @t.CoachId</small>
                    </div>
                    <div class="d-flex align-items-center">
                        @switch (t.Status)
                        {
                            case Status.NotAttempted:
                                <span class="badge bg-secondary me-2">üü° Not Attempted</span>
                                break;
                            case Status.Attempting:
                                <span class="badge bg-primary me-2">üîµ Attempting</span>
                                break;
                            case Status.Stuck:
                                <span class="badge bg-warning me-2">üü† Stuck</span>
                                break;
                            case Status.Completed:
                                <span class="badge bg-success me-2">‚úÖ Completed</span>
                                break;
                        }
                        <form method="post">
                            <input type="hidden" value="1" asp-for="Action"/>
                            <input type="hidden" value="@t.Id" asp-for="TaskId"/>
                            <button type="submit" class="btn btn-danger btn-sm">üóëÔ∏è Delete</button>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Monaco Editor configuration
        require.config({paths: {'vs': 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.34.0/min/vs'}});
        require(['vs/editor/editor.main'], function () {
            // Initialize Monaco Editor
            var editor = monaco.editor.create(document.getElementById('editorContainer'), {
                value: document.getElementById('dailyReport').value,
                language: 'markdown', // Change language to Markdown
                theme: 'vs-dark', // Change theme to dark mode
                lineNumbers: 'on', // Enable line numbers
                readOnly: true, // Make read-only
                minimap: {enabled: true} // Enable minimap
            });

            // Update the hidden textarea with the editor content before form submission
            document.querySelector('form')?.addEventListener('submit', function () {
                document.getElementById('dailyReport').value = editor.getValue();
            });
        });
    </script>
}